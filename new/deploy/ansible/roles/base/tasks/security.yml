---
- name: Install security packages
  apt:
    name:
      - apparmor
      - apparmor-profiles
      - apparmor-utils
      - auditd
      - rkhunter
      - lynis
      - aide
      - fail2ban
      - ufw
    state: present

- name: Configure UFW
  ufw:
    state: enabled
    policy: deny
  register: ufw_status

- name: Allow SSH
  ufw:
    rule: allow
    port: "{{ ssh_port | default('22') }}"
    proto: tcp

- name: Allow Neo4j ports only from localhost
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
    from_ip: 127.0.0.1
  loop:
    - 7474  # Neo4j Browser
    - 7687  # Neo4j Bolt

- name: Create containerd AppArmor profile
  copy:
    dest: /etc/apparmor.d/usr.bin.containerd
    content: |
      #include <tunables/global>

      profile containerd /usr/bin/containerd flags=(complain) {
        #include <abstractions/base>
        #include <abstractions/nameservice>

        capability net_admin,
        capability net_raw,
        capability setuid,
        capability setgid,
        capability sys_admin,
        capability sys_chroot,
        capability sys_ptrace,
        capability sys_resource,
        capability dac_override,

        # Containerd directories
        /var/lib/containerd/ rw,
        /var/lib/containerd/** rwkl,
        /run/containerd/ rw,
        /run/containerd/** rwkl,

        # Common directories
        /opt/osint/ r,
        /opt/osint/** rwl,

        # Allow network access
        network,

        # Allow container execution
        /proc/sys/kernel/cap_last_cap r,
        /proc/sys/net/** rw,
        /proc/sys/kernel/modprobe r,
        /proc/sys/kernel/ngroups_max r,
        /sys/kernel/mm/transparent_hugepage/hpage_pmd_size r,
      }
    mode: 0644

- name: Create security audit script
  copy:
    dest: /opt/osint/scripts/security_audit.sh
    content: |
      #!/bin/bash
      
      # Security audit script for OSINT Command Center
      
      date_str=$(date +%Y%m%d_%H%M%S)
      output_dir="/opt/osint/data/security_reports"
      mkdir -p "$output_dir"
      
      # Run Lynis audit
      echo "Running Lynis security audit..."
      lynis audit system --no-colors --quiet --report-file="$output_dir/lynis_audit_$date_str.txt"
      
      # Run rkhunter
      echo "Running rkhunter..."
      rkhunter --check --skip-keypress --report-warnings-only > "$output_dir/rkhunter_$date_str.txt"
      
      # Check for failed login attempts
      echo "Checking for failed login attempts..."
      grep "Failed password" /var/log/auth.log | tail -n 50 > "$output_dir/failed_logins_$date_str.txt"
      
      # Check for open ports
      echo "Checking open ports..."
      ss -tulpn > "$output_dir/open_ports_$date_str.txt"
      
      # Check container security
      echo "Checking container security..."
      nerdctl ps --format "table {{.ID}}\t{{.Names}}\t{{.Status}}" > "$output_dir/containers_$date_str.txt"
      
      echo "Security audit completed. Reports saved to $output_dir"
    mode: 0755

- name: Create security monitoring cron job
  cron:
    name: "OSINT security audit"
    hour: "2"
    minute: "30"
    job: "/opt/osint/scripts/security_audit.sh > /dev/null 2>&1"

- name: Set up automatic security updates
  copy:
    dest: /etc/apt/apt.conf.d/20auto-upgrades
    content: |
      APT::Periodic::Update-Package-Lists "1";
      APT::Periodic::Unattended-Upgrade "1";
      APT::Periodic::AutocleanInterval "7";
    mode: 0644

- name: Configure fail2ban more aggressively
  copy:
    dest: /etc/fail2ban/jail.local
    content: |
      [DEFAULT]
      bantime = 86400
      findtime = 600
      maxretry = 3
      
      [sshd]
      enabled = true
      port = {{ ssh_port | default('22') }}
      filter = sshd
      logpath = /var/log/auth.log
      maxretry = 3
      bantime = 86400
    mode: 0644
  notify: Restart fail2ban

- name: Enable and configure auditd
  copy:
    dest: /etc/audit/rules.d/audit.rules
    content: |
      # Audit rules for OSINT Command Center
      
      # Delete all previous rules
      -D
      
      # Set buffer size
      -b 8192
      
      # Monitor file access to sensitive files
      -w /etc/passwd -p wa -k password-file
      -w /etc/shadow -p wa -k password-file
      -w /etc/ssh/sshd_config -p wa -k sshd-config
      
      # Monitor OSINT data directory for changes
      -w /opt/osint/data -p wa -k osint-data
      
      # Monitor container runtime
      -w /usr/bin/containerd -p x -k containerd
      -w /usr/bin/nerdctl -p x -k nerdctl
      
      # Monitor user commands
      -a exit,always -F arch=b64 -S execve -k user_cmds
      
      # Monitor network changes
      -a exit,always -F arch=b64 -S sethostname -S setdomainname -k network_modifications
    mode: 0644
  notify: Restart auditd

handlers:
  - name: Restart fail2ban
    service:
      name: fail2ban
      state: restarted

  - name: Restart auditd
    service:
      name: auditd
      state: restarted