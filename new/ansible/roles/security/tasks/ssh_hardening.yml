---
- name: Configure SSH hardening
  blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      # Security hardening
      Protocol 2
      PermitRootLogin prohibit-password
      PasswordAuthentication no
      PubkeyAuthentication yes
      PermitEmptyPasswords no
      X11Forwarding no
      MaxAuthTries 3
      LoginGraceTime 30
      ClientAliveInterval 180
      ClientAliveCountMax 3
      AllowAgentForwarding no
      AllowTcpForwarding no
      Banner /etc/issue.net
      DebianBanner no
  notify: Restart SSH

# Campo user still needs to use password auth for SSH
- name: Create SSH config for campo user
  blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      Match User campo
        PasswordAuthentication yes
  notify: Restart SSH

- name: Create SSH keys for authentication
  user:
    name: "{{ item }}"
    generate_ssh_key: yes
    ssh_key_type: ed25519
    ssh_key_bits: 4096
    ssh_key_comment: "{{ item }}@osint"
  loop:
    - root
    - campo
  when: create_ssh_keys | default(false)

- name: Ensure secure permissions for SSH directories
  file:
    path: "/{{ 'root' if item == 'root' else 'home/' + item }}/.ssh"
    state: directory
    owner: "{{ item }}"
    group: "{{ item if item != 'root' else 'root' }}"
    mode: 0700
  loop:
    - root
    - campo

- name: Ensure secure permissions for authorized_keys
  file:
    path: "/{{ 'root' if item == 'root' else 'home/' + item }}/.ssh/authorized_keys"
    state: touch
    owner: "{{ item }}"
    group: "{{ item if item != 'root' else 'root' }}"
    mode: 0600
  loop:
    - root
    - campo
    
- name: Configure fail2ban for SSH
  template:
    src: fail2ban-ssh.conf.j2
    dest: /etc/fail2ban/jail.d/sshd.conf
  notify: Restart fail2ban