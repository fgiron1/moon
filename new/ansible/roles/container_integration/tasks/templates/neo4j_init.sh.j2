#!/bin/bash

# Neo4j initialization script
# Sets up initial Neo4j database with constraints and indexes

# Colors
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
NEO4J_CONTAINER="osint-data-storage"
NEO4J_USER="neo4j"
NEO4J_PASSWORD="osint_password"

# Check if running as root
if [ "$EUID" -ne 0 ]; then
  echo -e "${RED}Please run as root${NC}"
  exit 1
fi

# Check if Neo4j container is running
if ! nerdctl ps | grep -q "$NEO4J_CONTAINER"; then
    echo -e "${RED}Error: Neo4j container is not running${NC}"
    exit 1
fi

# Wait for Neo4j to start
echo -e "${YELLOW}Waiting for Neo4j to start...${NC}"
sleep 10

# Cypher query to create constraints and indexes
CYPHER_QUERY=$(cat <<'EOF'
// Create constraints
CREATE CONSTRAINT entity_id IF NOT EXISTS ON (e:Entity) ASSERT e.id IS UNIQUE;
CREATE CONSTRAINT domain_value IF NOT EXISTS ON (d:Domain) ASSERT d.value IS UNIQUE;
CREATE CONSTRAINT ip_address_value IF NOT EXISTS ON (i:IPAddress) ASSERT i.value IS UNIQUE;
CREATE CONSTRAINT email_value IF NOT EXISTS ON (e:Email) ASSERT e.value IS UNIQUE;
CREATE CONSTRAINT username_value IF NOT EXISTS ON (u:Username) ASSERT (u.value, u.platform) IS UNIQUE;

// Create indexes
CREATE INDEX entity_type IF NOT EXISTS FOR (e:Entity) ON (e.type);
CREATE INDEX entity_value IF NOT EXISTS FOR (e:Entity) ON (e.value);
CREATE INDEX entity_confidence IF NOT EXISTS FOR (e:Entity) ON (e.confidence);
CREATE INDEX entity_source IF NOT EXISTS FOR (e:Entity) ON (e.source);

// Create target nodes index
CREATE INDEX target_name IF NOT EXISTS FOR (t:Target) ON (t.name);

// Create basic relationship indexes
CREATE INDEX relationship_type IF NOT EXISTS FOR ()-[r:RELATES_TO]-() ON (r.type);
CREATE INDEX relationship_confidence IF NOT EXISTS FOR ()-[r:RELATES_TO]-() ON (r.confidence);

// Return status
RETURN 'Constraints and indexes created successfully' AS Status;
EOF
)

# Run cypher query
echo -e "${YELLOW}Creating constraints and indexes...${NC}"
nerdctl exec "$NEO4J_CONTAINER" cypher-shell -u "$NEO4J_USER" -p "$NEO4J_PASSWORD" "$CYPHER_QUERY"

if [ $? -eq 0 ]; then
    echo -e "${GREEN}Neo4j initialization completed successfully${NC}"
else
    echo -e "${RED}Error: Failed to initialize Neo4j${NC}"
    exit 1
fi

echo -e "${BLUE}Neo4j is now ready for use${NC}"
echo -e "${YELLOW}Default credentials: ${NEO4J_USER} / ${NEO4J_PASSWORD}${NC}"
echo -e "${YELLOW}Please change the default password for security${NC}"

exit 0