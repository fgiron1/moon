---
- name: Security hardening
  hosts: all
  become: yes
  roles:
    - role: security
      tags: security
    
    - role: common
      tags: common

  tasks:
    - name: Install security packages
      apt:
        name:
          - apparmor
          - apparmor-profiles
          - apparmor-utils
          - auditd
          - rkhunter
          - lynis
          - aide
          - fail2ban
          - ufw
        state: present

    - name: Configure UFW
      ufw:
        state: enabled
        policy: deny
      register: ufw_status

    - name: Allow SSH
      ufw:
        rule: allow
        port: "{{ ssh_port | default('22') }}"
        proto: tcp

    - name: Allow Neo4j ports only from localhost
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
        from_ip: 127.0.0.1
      loop:
        - 7474  # Neo4j Browser
        - 7687  # Neo4j Bolt

    - name: Create security audit script
      copy:
        dest: /opt/osint/scripts/security_audit.sh
        content: |
          #!/bin/bash
          
          # Security audit script for OSINT Command Center
          
          date_str=$(date +%Y%m%d_%H%M%S)
          output_dir="/opt/osint/data/security_reports"
          mkdir -p "$output_dir"
          
          # Run Lynis audit
          echo "Running Lynis security audit..."
          lynis audit system --no-colors --quiet --report-file="$output_dir/lynis_audit_$date_str.txt"
          
          # Run rkhunter
          echo "Running rkhunter..."
          rkhunter --check --skip-keypress --report-warnings-only > "$output_dir/rkhunter_$date_str.txt"
          
          # Check for failed login attempts
          echo "Checking for failed login attempts..."
          grep "Failed password" /var/log/auth.log | tail -n 50 > "$output_dir/failed_logins_$date_str.txt"
          
          # Check for open ports
          echo "Checking open ports..."
          ss -tulpn > "$output_dir/open_ports_$date_str.txt"
          
          # Check container security
          echo "Checking container security..."
          nerdctl ps --format "table {{.ID}}\t{{.Names}}\t{{.Status}}" > "$output_dir/containers_$date_str.txt"
          
          echo "Security audit completed. Reports saved to $output_dir"
        mode: 0755

    - name: Create security monitoring cron job
      cron:
        name: "OSINT security audit"
        hour: "2"
        minute: "30"
        job: "/opt/osint/scripts/security_audit.sh > /dev/null 2>&1"

  handlers:
    - name: Restart fail2ban
      service:
        name: fail2ban
        state: restarted

    - name: Restart auditd
      service:
        name: auditd
        state: restarted