#!/bin/bash

# Define colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# OSINT tools directory
TOOLS_DIR="{{ osint_tools_dir }}"

echo -e "${BLUE}===============================================${NC}"
echo -e "${BLUE}     OSINT Tools Update & Maintenance Script    ${NC}"
echo -e "${BLUE}===============================================${NC}"

# Update system packages
echo -e "${YELLOW}Updating system packages...${NC}"
apt update && apt upgrade -y
echo -e "${GREEN}System packages updated.${NC}"

# Update pip
echo -e "${YELLOW}Updating pip...${NC}"
pip3 install --upgrade pip
echo -e "${GREEN}Pip updated.${NC}"

# Update git repositories
echo -e "${YELLOW}Updating OSINT tool repositories...${NC}"
cd $TOOLS_DIR

for tool_dir in */; do
  if [ -d "$tool_dir/.git" ]; then
    echo -e "${BLUE}Updating ${tool_dir%/}...${NC}"
    cd "$tool_dir"
    
    # Save the current branch
    BRANCH=$(git branch --show-current)
    
    # Stash any local changes
    git stash
    
    # Pull the latest changes
    git pull origin $BRANCH
    
    # Apply stashed changes if any
    git stash pop 2>/dev/null
    
    # Check if requirements.txt exists and update Python dependencies
    if [ -f "requirements.txt" ]; then
      echo -e "${YELLOW}Installing/updating dependencies for ${tool_dir%/}...${NC}"
      pip3 install -r requirements.txt --upgrade
    elif [ -f "REQUIREMENTS" ]; then
      echo -e "${YELLOW}Installing/updating dependencies for ${tool_dir%/}...${NC}"
      pip3 install -r REQUIREMENTS --upgrade
    fi
    
    cd ..
    echo -e "${GREEN}${tool_dir%/} updated.${NC}"
  fi
done

# Special handling for bbot
if [ -d "$TOOLS_DIR/bbot" ]; then
  echo -e "${YELLOW}Updating bbot specifically...${NC}"
  cd "$TOOLS_DIR/bbot"
  git pull
  pip install -e .
  cd ..
  echo -e "${GREEN}bbot updated.${NC}"
fi

# Update Python global packages
echo -e "${YELLOW}Updating global Python packages...${NC}"
pip3 install --upgrade {{ osint_python_packages | join(' ') }}
echo -e "${GREEN}Global Python packages updated.${NC}"

# Update specific external tools
echo -e "${YELLOW}Checking for updates to external tools...${NC}"

# WireGuard tools
if command -v wg > /dev/null; then
  echo -e "${YELLOW}Updating WireGuard tools...${NC}"
  apt install --only-upgrade wireguard-tools
fi

# Kismet
if [ -d "$TOOLS_DIR/wireless/kismet" ]; then
  echo -e "${YELLOW}Updating Kismet...${NC}"
  cd "$TOOLS_DIR/wireless/kismet"
  git pull
  make
  make install
  cd ../../..
fi

echo -e "${BLUE}===============================================${NC}"
echo -e "${GREEN}OSINT tools update completed successfully!${NC}"
echo -e "${BLUE}===============================================${NC}"

# Create update log
mkdir -p "{{ osint_data_dir }}/updates"
echo "Update completed on $(date)" > "{{ osint_data_dir }}/updates/$(date +%Y-%m-%d).log"