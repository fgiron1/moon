#!/bin/bash

# Script to handle phone USB tethering connection

# Log event
logger -t osint-phone-connected "USB tethered phone detected"

# Wait for interface to be fully initialized
sleep 2

# Find USB network interfaces
usb_ifaces=$(ip -o link show | awk -F': ' '{print $2}' | grep -E "usb|enp0s.*u" | grep -v "lo")

# If no interfaces found, exit
if [ -z "$usb_ifaces" ]; then
  logger -t osint-phone-connected "No USB network interfaces found"
  exit 1
fi

# For each interface, try to bring it up and get an IP
for iface in $usb_ifaces; do
  # Check if interface is already up and has IP
  if ip -o -4 addr show dev $iface 2>/dev/null | grep -q "inet"; then
    logger -t osint-phone-connected "Interface $iface already has an IP address"
    continue
  fi
  
  # Bring up interface
  ip link set $iface up
  
  # Try to get IP via DHCP
  logger -t osint-phone-connected "Requesting IP for $iface"
  dhclient -v $iface
  
  # Wait for IP assignment
  sleep 3
  
  # Check if IP was assigned
  if ip -o -4 addr show dev $iface | grep -q "inet"; then
    logger -t osint-phone-connected "Successfully connected to phone via $iface"
    
    # Notify user
    if [ -x "$(command -v wall)" ]; then
      wall "Phone connected via USB tethering on interface $iface. Use 'osint-network status' to check details."
    fi
    
    # Optional: automatically set this as the default route for osint user
    # /usr/local/bin/osint-network use $iface osint
    
    exit 0
  fi
done

logger -t osint-phone-connected "Failed to get IP address for USB interfaces"
exit 1